spring:
  jpa:
    database: postgresql
    show-sql: true
    hibernate:
      ddl-auto: ${DDL_AUTO}
      format_sql: true
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
  datasource:
    url: ${LOCAL_DB_URL}  # 컨테이너의 포트와 데이터베이스 이름에 맞게
    username: ${LOCAL_DB_USERNAME}  # Docker에서 설정한 POSTGRES_USER
    password: ${LOCAL_DB_PASSWORD} # Docker에서 설정한 POSTGRES_PASSWORD

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  security:

    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            scope:
              - profile_nickname
              - account_email
              - name
              - gender
              - birthday
              - birthyear
              - phone_number
            redirect-uri: ${KAKAO_REDIRECT_URI}
            client-name: kakao
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id


springdoc:
  version: '@project.version@'
  api-docs:
    path: /api-docs
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  swagger-ui:
    operations-sorter: alpha
    tags-sorter: alpha
    path: /swagger-ui.html
    disable-swagger-default-url: true
    display-query-params-without-oauth2: true
    doc-expansion: none
  paths-to-match:
    - /api/**


jwt:
  secret-key: ${JWT_SECRET_KEY}
